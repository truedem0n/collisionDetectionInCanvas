{"version":3,"sources":["script.js"],"names":["canvas","document","querySelector","c","getContext","width","innerWidth","height","innerHeight","mouse","x","y","window","addEventListener","event","getDistance","x1","y1","x2","y2","xDistance","yDistance","Math","sqrt","randomIntFrom","min","max","floor","random","Circle","r","dx","dy","color","mass","radians","velocity","draw","beginPath","arc","PI","strokeStyle","fillStyle","stroke","fill","update","particles","fillRect","i","length","resolveCollision","init","j","particle","push","rotate","angle","rotatedVelocities","cos","sin","otherParticle","xVelocityDiff","yVelocityDiff","xDist","yDist","atan2","m1","m2","u1","u2","v1","v2","vFinal1","vFinal2","animate","requestAnimationFrame"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..","sourcesContent":["const canvas = document.querySelector(\"canvas\")\nconst c = canvas.getContext(\"2d\");\n\ncanvas.width = innerWidth;\ncanvas.height = innerHeight;\n\nlet mouse = {\n    x: 500,\n    y: 500\n}\nwindow.addEventListener(\"mousemove\", (event) => {\n    mouse.x = event.x,\n        mouse.y = event.y\n})\nfunction getDistance(x1, y1, x2, y2) {\n    xDistance = x2 - x1\n    yDistance = y2 - y1\n    return Math.sqrt(xDistance ** 2 + yDistance ** 2)\n}\nfunction randomIntFrom(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\nfunction Circle(x, y, r, dx = 5, dy = 5, color = \"hsl(255,50%,50%)\") {\n    this.x = x\n    this.y = y\n    this.r = r\n    this.mass = 1\n    this.radians = 0;\n    this.velocity = {\n        x: dx,\n        y: dy,\n    };\n\n    this.color = color\n    this.draw = () => {\n        c.beginPath()\n        c.arc(this.x, this.y, this.r, 0, Math.PI * 2, false)\n        c.strokeStyle = \"#FFFFFF\"\n        c.fillStyle = this.color\n        c.stroke()\n        c.fill()\n    }\n\n    this.update = (particles) => {\n        c.fillStyle = \"rgba(0,0,0,0.08)\"\n        c.fillRect(0, 0, innerWidth, innerHeight)\n        if (this.x > canvas.width - this.r || this.x < 0 + this.r) {\n            this.velocity.x = -this.velocity.x\n        } else if (this.y > canvas.height - this.r || this.y < 0 + this.r) {\n            this.velocity.y = -this.velocity.y\n        }\n\n        for (let i = 0; i < particles.length; i++) {\n            if (this != particles[i]) {\n                if (getDistance(this.x, this.y, particles[i].x, particles[i].y) < this.r + particles[i].r) {\n                    resolveCollision(this, particles[i])\n                    this.color=`hsl(${randomIntFrom(0,255)},100%,50%)`\n                    c.fill()\n                }\n            }\n        }\n        this.radians += 0.01;\n        // this.x += (2 * Math.cos(this.radians / 2)) / 2\n        // this.y += (2 * Math.sin(this.radians / 2)) / 2\n        this.y += this.velocity.y\n        this.x += this.velocity.x\n        this.draw()\n    }\n\n}\nconst particles = []\nfunction init() {\n    let x, y, r;\n    for (let i = 0; i < 5; i++) {\n        x = randomIntFrom(100, innerWidth - 110)\n        y = randomIntFrom(100, innerHeight - 110)\n        if (i != 0) {\n            for (j = 0; j < particles.length; j++) {\n                if (getDistance(x, y, particles[j].x, particles[j].y) - 200 < 0) {\n                    x = randomIntFrom(100, innerWidth - 100)\n                    y = randomIntFrom(100, innerHeight - 100)\n                    j -= 1  \n                }\n            }\n        }\n        particle = new Circle(x + 100, y, 100)\n        particles.push(particle)\n        particle.update(particles)\n    }\n}\nfunction rotate(velocity, angle) {\n    const rotatedVelocities = {\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\n    };\n    return rotatedVelocities;\n}\n\n/**\n * Swaps out two colliding particles' x and y velocities after running through\n * an elastic collision reaction equation\n *\n * @param  Object | particle      | A particle object with x and y coordinates, plus velocity\n * @param  Object | otherParticle | A particle object with x and y coordinates, plus velocity\n * @return Null | Does not return a value\n */\n\nfunction resolveCollision(particle, otherParticle) {\n    const xVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\n    const yVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\n\n    const xDist = otherParticle.x - particle.x;\n    const yDist = otherParticle.y - particle.y;\n\n    // Prevent accidental overlap of particles\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n        // Grab angle between the two colliding particles\n        const angle = -Math.atan2(otherParticle.y - particle.y, otherParticle.x - particle.x);\n\n        // Store mass in var for better readability in collision equation\n        const m1 = particle.r;\n        const m2 = otherParticle.r;\n\n        // Velocity before equation\n        const u1 = rotate(particle.velocity, angle);\n        const u2 = rotate(otherParticle.velocity, angle);\n\n        // Velocity after 1d collision equation\n        const v1 = { x: u1.x * (m1 - m2) / (m1 + m2) + u2.x * 2 * m2 / (m1 + m2), y: u1.y };\n        const v2 = { x: u2.x * (m1 - m2) / (m1 + m2) + u1.x * 2 * m2 / (m1 + m2), y: u2.y };\n\n        // Final velocity after rotating axis back to original location\n        const vFinal1 = rotate(v1, -angle);\n        const vFinal2 = rotate(v2, -angle);\n\n        // Swap particle velocities for realistic bounce effect\n        particle.velocity.x = vFinal1.x;\n        particle.velocity.y = vFinal1.y;\n\n        otherParticle.velocity.x = vFinal2.x;\n        otherParticle.velocity.y = vFinal2.y;\n    }\n}\nfunction animate() {\n    requestAnimationFrame(animate)\n    for (i = 0; i < particles.length; i++) {\n        particles[i].update(particles)\n    }\n}\ninit()\nanimate()\n"]}